// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user_api_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 请求参数
type Args struct {
	UserId               int32    `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Args) Reset()         { *m = Args{} }
func (m *Args) String() string { return proto.CompactTextString(m) }
func (*Args) ProtoMessage()    {}
func (*Args) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *Args) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Args.Unmarshal(m, b)
}
func (m *Args) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Args.Marshal(b, m, deterministic)
}
func (m *Args) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Args.Merge(m, src)
}
func (m *Args) XXX_Size() int {
	return xxx_messageInfo_Args.Size(m)
}
func (m *Args) XXX_DiscardUnknown() {
	xxx_messageInfo_Args.DiscardUnknown(m)
}

var xxx_messageInfo_Args proto.InternalMessageInfo

func (m *Args) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ArgsMany struct {
	UserIdList           []int32  `protobuf:"varint,1,rep,packed,name=UserIdList,proto3" json:"UserIdList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArgsMany) Reset()         { *m = ArgsMany{} }
func (m *ArgsMany) String() string { return proto.CompactTextString(m) }
func (*ArgsMany) ProtoMessage()    {}
func (*ArgsMany) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *ArgsMany) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArgsMany.Unmarshal(m, b)
}
func (m *ArgsMany) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArgsMany.Marshal(b, m, deterministic)
}
func (m *ArgsMany) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArgsMany.Merge(m, src)
}
func (m *ArgsMany) XXX_Size() int {
	return xxx_messageInfo_ArgsMany.Size(m)
}
func (m *ArgsMany) XXX_DiscardUnknown() {
	xxx_messageInfo_ArgsMany.DiscardUnknown(m)
}

var xxx_messageInfo_ArgsMany proto.InternalMessageInfo

func (m *ArgsMany) GetUserIdList() []int32 {
	if m != nil {
		return m.UserIdList
	}
	return nil
}

type Resp struct {
	ErrorCode            string   `protobuf:"bytes,1,opt,name=ErrorCode,proto3" json:"ErrorCode,omitempty"`
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	Data                 *Data    `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resp) Reset()         { *m = Resp{} }
func (m *Resp) String() string { return proto.CompactTextString(m) }
func (*Resp) ProtoMessage()    {}
func (*Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resp.Unmarshal(m, b)
}
func (m *Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resp.Marshal(b, m, deterministic)
}
func (m *Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resp.Merge(m, src)
}
func (m *Resp) XXX_Size() int {
	return xxx_messageInfo_Resp.Size(m)
}
func (m *Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_Resp proto.InternalMessageInfo

func (m *Resp) GetErrorCode() string {
	if m != nil {
		return m.ErrorCode
	}
	return ""
}

func (m *Resp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *Resp) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// 返回参数
type RespMany struct {
	ErrorCode            string    `protobuf:"bytes,1,opt,name=ErrorCode,proto3" json:"ErrorCode,omitempty"`
	ErrorMsg             string    `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	DataMany             *DataMany `protobuf:"bytes,3,opt,name=DataMany,proto3" json:"DataMany,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RespMany) Reset()         { *m = RespMany{} }
func (m *RespMany) String() string { return proto.CompactTextString(m) }
func (*RespMany) ProtoMessage()    {}
func (*RespMany) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *RespMany) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespMany.Unmarshal(m, b)
}
func (m *RespMany) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespMany.Marshal(b, m, deterministic)
}
func (m *RespMany) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespMany.Merge(m, src)
}
func (m *RespMany) XXX_Size() int {
	return xxx_messageInfo_RespMany.Size(m)
}
func (m *RespMany) XXX_DiscardUnknown() {
	xxx_messageInfo_RespMany.DiscardUnknown(m)
}

var xxx_messageInfo_RespMany proto.InternalMessageInfo

func (m *RespMany) GetErrorCode() string {
	if m != nil {
		return m.ErrorCode
	}
	return ""
}

func (m *RespMany) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *RespMany) GetDataMany() *DataMany {
	if m != nil {
		return m.DataMany
	}
	return nil
}

type Data struct {
	User                 *User    `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (m *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(m, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type DataMany struct {
	UserList             []*User  `protobuf:"bytes,1,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataMany) Reset()         { *m = DataMany{} }
func (m *DataMany) String() string { return proto.CompactTextString(m) }
func (*DataMany) ProtoMessage()    {}
func (*DataMany) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *DataMany) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataMany.Unmarshal(m, b)
}
func (m *DataMany) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataMany.Marshal(b, m, deterministic)
}
func (m *DataMany) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataMany.Merge(m, src)
}
func (m *DataMany) XXX_Size() int {
	return xxx_messageInfo_DataMany.Size(m)
}
func (m *DataMany) XXX_DiscardUnknown() {
	xxx_messageInfo_DataMany.DiscardUnknown(m)
}

var xxx_messageInfo_DataMany proto.InternalMessageInfo

func (m *DataMany) GetUserList() []*User {
	if m != nil {
		return m.UserList
	}
	return nil
}

type User struct {
	UserId               int32    `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Mobile               string   `protobuf:"bytes,2,opt,name=Mobile,proto3" json:"Mobile,omitempty"`
	Nickname             string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *User) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func init() {
	proto.RegisterType((*Args)(nil), "user_api_service.Args")
	proto.RegisterType((*ArgsMany)(nil), "user_api_service.ArgsMany")
	proto.RegisterType((*Resp)(nil), "user_api_service.Resp")
	proto.RegisterType((*RespMany)(nil), "user_api_service.RespMany")
	proto.RegisterType((*Data)(nil), "user_api_service.Data")
	proto.RegisterType((*DataMany)(nil), "user_api_service.DataMany")
	proto.RegisterType((*User)(nil), "user_api_service.User")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x4f, 0x6b, 0xfa, 0x40,
	0x10, 0x75, 0x7f, 0xfe, 0x21, 0x19, 0xe1, 0xd7, 0xb2, 0x07, 0x1b, 0x42, 0x11, 0xc9, 0x29, 0x78,
	0x10, 0x1b, 0xa1, 0x57, 0xb1, 0x7f, 0x90, 0xd2, 0x4a, 0xe9, 0x8a, 0x97, 0x5e, 0x24, 0xea, 0x56,
	0x42, 0x35, 0x09, 0xbb, 0xb1, 0x50, 0xe8, 0xd7, 0xe8, 0xf7, 0x2d, 0x33, 0x49, 0x55, 0x6a, 0x22,
	0xb4, 0xb7, 0xcc, 0x9b, 0xd9, 0xf7, 0xde, 0xbc, 0xcd, 0x02, 0x6c, 0xb4, 0x54, 0x9d, 0x58, 0x45,
	0x49, 0xc4, 0x4f, 0xf1, 0x7b, 0xea, 0xc7, 0xc1, 0x54, 0x4b, 0xf5, 0x16, 0xcc, 0xa5, 0xd3, 0x84,
	0xca, 0x40, 0x2d, 0x35, 0x6f, 0x40, 0x6d, 0xa2, 0xa5, 0xba, 0x5b, 0x58, 0xac, 0xc5, 0xdc, 0xaa,
	0xc8, 0x2a, 0xa7, 0x0d, 0x06, 0xf6, 0x47, 0x7e, 0xf8, 0xce, 0x9b, 0x00, 0x29, 0xfa, 0x10, 0xe8,
	0xc4, 0x62, 0xad, 0xb2, 0x5b, 0x15, 0x7b, 0x88, 0xb3, 0x82, 0x8a, 0x90, 0x3a, 0xe6, 0xe7, 0x60,
	0xde, 0x2a, 0x15, 0xa9, 0xeb, 0x68, 0x21, 0x89, 0xce, 0x14, 0x3b, 0x80, 0xdb, 0x60, 0x50, 0x31,
	0xd2, 0x4b, 0xeb, 0x1f, 0x35, 0xb7, 0x35, 0x6f, 0x43, 0xe5, 0xc6, 0x4f, 0x7c, 0xab, 0xdc, 0x62,
	0x6e, 0xdd, 0x6b, 0x74, 0x7e, 0xda, 0xed, 0x60, 0x57, 0xd0, 0x8c, 0xf3, 0x01, 0x06, 0xaa, 0x91,
	0xb3, 0xbf, 0x2b, 0x5e, 0x82, 0x81, 0x6c, 0xc8, 0x92, 0xa9, 0xda, 0xf9, 0xaa, 0x38, 0x21, 0xb6,
	0xb3, 0x8e, 0x97, 0x3a, 0x45, 0xc7, 0x98, 0x00, 0x89, 0xe6, 0x3a, 0xc6, 0xae, 0xa0, 0x19, 0xa7,
	0xbf, 0xd3, 0xe2, 0x3d, 0x30, 0x69, 0x74, 0xf5, 0x1d, 0x65, 0xf1, 0x61, 0x03, 0x61, 0x0a, 0x58,
	0xa4, 0x62, 0x45, 0x97, 0x85, 0xf8, 0x28, 0x9a, 0x05, 0x2b, 0x99, 0xad, 0x99, 0x55, 0x18, 0x40,
	0x18, 0xcc, 0x5f, 0x43, 0x7f, 0x2d, 0x69, 0x49, 0x53, 0x6c, 0x6b, 0xef, 0xb3, 0x0c, 0xff, 0xf1,
	0xf8, 0x20, 0x0e, 0xc6, 0xa9, 0x2a, 0xef, 0x43, 0x7d, 0x28, 0x13, 0xe2, 0x0c, 0x5f, 0x22, 0x9e,
	0xe3, 0x0b, 0x7f, 0x09, 0x3b, 0x07, 0xc7, 0x0b, 0x71, 0x4a, 0xfc, 0x1e, 0x4e, 0xf6, 0x08, 0xd0,
	0x3a, 0xb7, 0xf3, 0x49, 0x30, 0x0b, 0xdb, 0xce, 0x27, 0xa2, 0x9c, 0x4b, 0xfc, 0x09, 0xce, 0x86,
	0x32, 0xd9, 0xec, 0x91, 0x8d, 0x13, 0x25, 0xfd, 0x75, 0xf7, 0xa2, 0xd0, 0xd9, 0x51, 0x42, 0x97,
	0x15, 0x53, 0x7a, 0x47, 0x7d, 0x16, 0x2e, 0xdc, 0x65, 0xfc, 0x91, 0x28, 0x27, 0x87, 0x94, 0xbd,
	0xdf, 0xe7, 0xe7, 0xb2, 0x2e, 0xbb, 0xe2, 0xcf, 0x07, 0x8f, 0x75, 0x56, 0xa3, 0x57, 0xdc, 0xfb,
	0x0a, 0x00, 0x00, 0xff, 0xff, 0x53, 0xd9, 0xe7, 0x57, 0xd3, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserApiServiceClient is the client API for UserApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserApiServiceClient interface {
	// 获取用户信息
	GetUserInfo(ctx context.Context, in *Args, opts ...grpc.CallOption) (*Resp, error)
	// 根据一组用户ID， 获取用户列表
	GetUserInfoList(ctx context.Context, in *ArgsMany, opts ...grpc.CallOption) (*RespMany, error)
	// 单向流 client
	GetuserInfoListStream01(ctx context.Context, opts ...grpc.CallOption) (UserApiService_GetuserInfoListStream01Client, error)
	// 单向流 server
	GetuserInfoListStream02(ctx context.Context, in *ArgsMany, opts ...grpc.CallOption) (UserApiService_GetuserInfoListStream02Client, error)
	// 双向流
	GetUserInfoListStream03(ctx context.Context, opts ...grpc.CallOption) (UserApiService_GetUserInfoListStream03Client, error)
}

type userApiServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserApiServiceClient(cc *grpc.ClientConn) UserApiServiceClient {
	return &userApiServiceClient{cc}
}

func (c *userApiServiceClient) GetUserInfo(ctx context.Context, in *Args, opts ...grpc.CallOption) (*Resp, error) {
	out := new(Resp)
	err := c.cc.Invoke(ctx, "/user_api_service.UserApiService/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userApiServiceClient) GetUserInfoList(ctx context.Context, in *ArgsMany, opts ...grpc.CallOption) (*RespMany, error) {
	out := new(RespMany)
	err := c.cc.Invoke(ctx, "/user_api_service.UserApiService/GetUserInfoList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userApiServiceClient) GetuserInfoListStream01(ctx context.Context, opts ...grpc.CallOption) (UserApiService_GetuserInfoListStream01Client, error) {
	stream, err := c.cc.NewStream(ctx, &_UserApiService_serviceDesc.Streams[0], "/user_api_service.UserApiService/GetuserInfoListStream01", opts...)
	if err != nil {
		return nil, err
	}
	x := &userApiServiceGetuserInfoListStream01Client{stream}
	return x, nil
}

type UserApiService_GetuserInfoListStream01Client interface {
	Send(*Args) error
	CloseAndRecv() (*RespMany, error)
	grpc.ClientStream
}

type userApiServiceGetuserInfoListStream01Client struct {
	grpc.ClientStream
}

func (x *userApiServiceGetuserInfoListStream01Client) Send(m *Args) error {
	return x.ClientStream.SendMsg(m)
}

func (x *userApiServiceGetuserInfoListStream01Client) CloseAndRecv() (*RespMany, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(RespMany)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *userApiServiceClient) GetuserInfoListStream02(ctx context.Context, in *ArgsMany, opts ...grpc.CallOption) (UserApiService_GetuserInfoListStream02Client, error) {
	stream, err := c.cc.NewStream(ctx, &_UserApiService_serviceDesc.Streams[1], "/user_api_service.UserApiService/GetuserInfoListStream02", opts...)
	if err != nil {
		return nil, err
	}
	x := &userApiServiceGetuserInfoListStream02Client{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UserApiService_GetuserInfoListStream02Client interface {
	Recv() (*Resp, error)
	grpc.ClientStream
}

type userApiServiceGetuserInfoListStream02Client struct {
	grpc.ClientStream
}

func (x *userApiServiceGetuserInfoListStream02Client) Recv() (*Resp, error) {
	m := new(Resp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *userApiServiceClient) GetUserInfoListStream03(ctx context.Context, opts ...grpc.CallOption) (UserApiService_GetUserInfoListStream03Client, error) {
	stream, err := c.cc.NewStream(ctx, &_UserApiService_serviceDesc.Streams[2], "/user_api_service.UserApiService/GetUserInfoListStream03", opts...)
	if err != nil {
		return nil, err
	}
	x := &userApiServiceGetUserInfoListStream03Client{stream}
	return x, nil
}

type UserApiService_GetUserInfoListStream03Client interface {
	Send(*Args) error
	Recv() (*Resp, error)
	grpc.ClientStream
}

type userApiServiceGetUserInfoListStream03Client struct {
	grpc.ClientStream
}

func (x *userApiServiceGetUserInfoListStream03Client) Send(m *Args) error {
	return x.ClientStream.SendMsg(m)
}

func (x *userApiServiceGetUserInfoListStream03Client) Recv() (*Resp, error) {
	m := new(Resp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UserApiServiceServer is the server API for UserApiService service.
type UserApiServiceServer interface {
	// 获取用户信息
	GetUserInfo(context.Context, *Args) (*Resp, error)
	// 根据一组用户ID， 获取用户列表
	GetUserInfoList(context.Context, *ArgsMany) (*RespMany, error)
	// 单向流 client
	GetuserInfoListStream01(UserApiService_GetuserInfoListStream01Server) error
	// 单向流 server
	GetuserInfoListStream02(*ArgsMany, UserApiService_GetuserInfoListStream02Server) error
	// 双向流
	GetUserInfoListStream03(UserApiService_GetUserInfoListStream03Server) error
}

// UnimplementedUserApiServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserApiServiceServer struct {
}

func (*UnimplementedUserApiServiceServer) GetUserInfo(ctx context.Context, req *Args) (*Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}
func (*UnimplementedUserApiServiceServer) GetUserInfoList(ctx context.Context, req *ArgsMany) (*RespMany, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfoList not implemented")
}
func (*UnimplementedUserApiServiceServer) GetuserInfoListStream01(srv UserApiService_GetuserInfoListStream01Server) error {
	return status.Errorf(codes.Unimplemented, "method GetuserInfoListStream01 not implemented")
}
func (*UnimplementedUserApiServiceServer) GetuserInfoListStream02(req *ArgsMany, srv UserApiService_GetuserInfoListStream02Server) error {
	return status.Errorf(codes.Unimplemented, "method GetuserInfoListStream02 not implemented")
}
func (*UnimplementedUserApiServiceServer) GetUserInfoListStream03(srv UserApiService_GetUserInfoListStream03Server) error {
	return status.Errorf(codes.Unimplemented, "method GetUserInfoListStream03 not implemented")
}

func RegisterUserApiServiceServer(s *grpc.Server, srv UserApiServiceServer) {
	s.RegisterService(&_UserApiService_serviceDesc, srv)
}

func _UserApiService_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserApiServiceServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_api_service.UserApiService/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserApiServiceServer).GetUserInfo(ctx, req.(*Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserApiService_GetUserInfoList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArgsMany)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserApiServiceServer).GetUserInfoList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_api_service.UserApiService/GetUserInfoList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserApiServiceServer).GetUserInfoList(ctx, req.(*ArgsMany))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserApiService_GetuserInfoListStream01_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UserApiServiceServer).GetuserInfoListStream01(&userApiServiceGetuserInfoListStream01Server{stream})
}

type UserApiService_GetuserInfoListStream01Server interface {
	SendAndClose(*RespMany) error
	Recv() (*Args, error)
	grpc.ServerStream
}

type userApiServiceGetuserInfoListStream01Server struct {
	grpc.ServerStream
}

func (x *userApiServiceGetuserInfoListStream01Server) SendAndClose(m *RespMany) error {
	return x.ServerStream.SendMsg(m)
}

func (x *userApiServiceGetuserInfoListStream01Server) Recv() (*Args, error) {
	m := new(Args)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _UserApiService_GetuserInfoListStream02_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ArgsMany)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserApiServiceServer).GetuserInfoListStream02(m, &userApiServiceGetuserInfoListStream02Server{stream})
}

type UserApiService_GetuserInfoListStream02Server interface {
	Send(*Resp) error
	grpc.ServerStream
}

type userApiServiceGetuserInfoListStream02Server struct {
	grpc.ServerStream
}

func (x *userApiServiceGetuserInfoListStream02Server) Send(m *Resp) error {
	return x.ServerStream.SendMsg(m)
}

func _UserApiService_GetUserInfoListStream03_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UserApiServiceServer).GetUserInfoListStream03(&userApiServiceGetUserInfoListStream03Server{stream})
}

type UserApiService_GetUserInfoListStream03Server interface {
	Send(*Resp) error
	Recv() (*Args, error)
	grpc.ServerStream
}

type userApiServiceGetUserInfoListStream03Server struct {
	grpc.ServerStream
}

func (x *userApiServiceGetUserInfoListStream03Server) Send(m *Resp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *userApiServiceGetUserInfoListStream03Server) Recv() (*Args, error) {
	m := new(Args)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _UserApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user_api_service.UserApiService",
	HandlerType: (*UserApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfo",
			Handler:    _UserApiService_GetUserInfo_Handler,
		},
		{
			MethodName: "GetUserInfoList",
			Handler:    _UserApiService_GetUserInfoList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetuserInfoListStream01",
			Handler:       _UserApiService_GetuserInfoListStream01_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetuserInfoListStream02",
			Handler:       _UserApiService_GetuserInfoListStream02_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetUserInfoListStream03",
			Handler:       _UserApiService_GetUserInfoListStream03_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "user.proto",
}
